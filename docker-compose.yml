services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eventgo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: eventgo_user
      POSTGRES_PASSWORD: eventgo_password
      POSTGRES_DB: eventgo_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eventgo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eventgo_user -d eventgo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eventgo-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgresql://eventgo_user:eventgo_password@postgres:5432/eventgo_db"
      NODE_ENV: production
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - eventgo-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eventgo-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - eventgo-network

volumes:
  postgres_data:
    driver: local

networks:
  eventgo-network:
    driver: bridge